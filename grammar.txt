statement   := var_dec | while_loop | expr
var_decl    := var NAME TYPE expr

expr            := (assigment_expr) | assigment_expr
assigment_expr  := logical_or  +=,-=,*=
logical_or      := {logical_and or} logical_and
logical_and     := {eq_neq_expr and} eq_neq_expr
eq_neq_expr     := {lt_gt_expr !=,==} lt_gt_expr
lt_gt_expr      := {add_sub_expr >,<,>=,<=} add_sub_expr
add_sub_expr    := {mul_div_expr (+-)} mul_div_expr
mul_div_expr    := {primary_expr (*/)} primary_expr
primary_expr    := function_call | atom

function_call   := NAME ( {arg} )
atom            := NAME | INTEGER_LITERAL | STR_LITERAL
